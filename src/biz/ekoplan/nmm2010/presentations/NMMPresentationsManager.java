/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NMMPresentationsManager.java
 *
 * Created on 2011-01-10, 18:21:14
 */

package biz.ekoplan.nmm2010.presentations;

import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import javax.swing.JOptionPane;
import nmm2010.NMMProject;

/**
 *
 * @author Jarek
 */
public class NMMPresentationsManager extends javax.swing.JDialog {

    NMMProject nmmProject;
    final boolean DEBUG=true;

    /** Creates new form NMMPresentationsManager */
    public NMMPresentationsManager(java.awt.Frame parent, boolean modal, NMMProject _nmmProject) {
        super(parent, modal);
        this.nmmProject=_nmmProject;
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAvailablePresentations = new javax.swing.JList();
        buttonClose = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonPrint = new javax.swing.JButton();
        buttonRename = new javax.swing.JButton();
        buttonDeleteAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations"); // NOI18N
        setTitle(bundle.getString("PRESENTATIONS MANAGER")); // NOI18N

        jLabel1.setText(bundle.getString("AVAILABLE PRESENTATIONS")); // NOI18N

        listAvailablePresentations.setModel(this.nmmProject.getPresentations());
        listAvailablePresentations.setToolTipText(bundle.getString("LIST OF AVAILABLE PRESENTATIONS.")); // NOI18N
        listAvailablePresentations.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listAvailablePresentationsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listAvailablePresentations);

        buttonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/toolbarButtonGraphics/general/Stop16.gif"))); // NOI18N
        buttonClose.setText(bundle.getString("CLOSE")); // NOI18N
        buttonClose.setToolTipText(bundle.getString("HIT THIS BUTTON TO CLOSE WINDOW.")); // NOI18N
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/toolbarButtonGraphics/general/Delete16.gif"))); // NOI18N
        buttonDelete.setText(bundle.getString("DELETE")); // NOI18N
        buttonDelete.setToolTipText(bundle.getString("HIT THIS BUTTON TO DELETE SELECTED PRESENTATION.")); // NOI18N
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/toolbarButtonGraphics/general/Print16.gif"))); // NOI18N
        buttonPrint.setText(bundle.getString("PRINT")); // NOI18N
        buttonPrint.setToolTipText(bundle.getString("HIT THIS BUTTON TO PRINT PRESENTATION.")); // NOI18N
        buttonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrintActionPerformed(evt);
            }
        });

        buttonRename.setText(bundle.getString("RENAME")); // NOI18N
        buttonRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRenameActionPerformed(evt);
            }
        });

        buttonDeleteAll.setText(bundle.getString("DELETE ALL")); // NOI18N
        buttonDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(buttonPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRename)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonDeleteAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClose)
                    .addComponent(buttonDelete)
                    .addComponent(buttonDeleteAll)
                    .addComponent(buttonRename)
                    .addComponent(buttonPrint))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrintActionPerformed

        int selIndex=this.listAvailablePresentations.getSelectedIndex();
        System.out.println("Wybrana index na liście dostepnych prezentacji: "+selIndex);
        if ((selIndex>-1) & (this.listAvailablePresentations.getModel().getSize()>0)) {
            PrinterJob job = PrinterJob.getPrinterJob();            
            PageFormat pf=job.pageDialog(job.defaultPage());                                
            job.setPrintable((Printable) this.nmmProject.getPresentation(selIndex), pf);
            boolean doPrint = job.printDialog();
            if (doPrint) {
                try {
                    job.print();
                } catch (PrinterException e) {
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("NO PRESENTATIONS. CREATE PRESENTATION FIRST!"),
                    java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("NMM WARNING"), JOptionPane.WARNING_MESSAGE);
        }     
        this.dispose();
    }//GEN-LAST:event_buttonPrintActionPerformed

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        
        int selIndex=this.listAvailablePresentations.getSelectedIndex();
        System.out.println("Wybrana index na liście dostepnych prezentacji: "+selIndex);
        if ((selIndex>-1) & (this.listAvailablePresentations.getModel().getSize()>0)) {
            if (JOptionPane.showConfirmDialog(this, 
                    java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("DELETE SELECTED PRESENTATION?"))==JOptionPane.YES_OPTION) {
                this.nmmProject.getPresentations().projectPresentations
                        .remove(selIndex);
                this.listAvailablePresentations.repaint();
            } else {
            }    
        } else {
            JOptionPane.showMessageDialog(this, java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("SELECT PRESENTATION FIRST!"),
                    java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("NMM WARNING"), JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRenameActionPerformed
        int selIndex=this.listAvailablePresentations.getSelectedIndex();
        System.out.println("Wybrana index na liście dostepnych prezentacji: "+selIndex);
        if ((selIndex>-1) & (this.listAvailablePresentations.getModel().getSize()>0)) {
            String newTitle=JOptionPane.showInputDialog(java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("NEW PRESENTATION TITLE?"));
            if (!newTitle.equals("")) {
                this.nmmProject.getPresentations().projectPresentations.get(selIndex).setPresentationTitle(newTitle);
                this.listAvailablePresentations.repaint();
            }
        }
    }//GEN-LAST:event_buttonRenameActionPerformed

    private void listAvailablePresentationsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listAvailablePresentationsValueChanged

        int selIndex=this.listAvailablePresentations.getSelectedIndex();
        System.out.println("Wybrana index na liście dostepnych prezentacji: "+selIndex);
    }//GEN-LAST:event_listAvailablePresentationsValueChanged

    private void buttonDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteAllActionPerformed

        int selIndex[]=this.listAvailablePresentations.getSelectedIndices();
        if (JOptionPane.showConfirmDialog(this,
                java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations").getString("DELETE ALL PRESENTATIONS?"))==JOptionPane.YES_OPTION) {
            this.nmmProject.getPresentations().projectPresentations
                   .clear();
            this.listAvailablePresentations.repaint();
        }    
    }//GEN-LAST:event_buttonDeleteAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonDeleteAll;
    private javax.swing.JButton buttonPrint;
    private javax.swing.JButton buttonRename;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listAvailablePresentations;
    // End of variables declaration//GEN-END:variables

   
}
