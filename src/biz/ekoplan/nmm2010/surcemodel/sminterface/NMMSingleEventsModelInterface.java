/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package biz.ekoplan.nmm2010.surcemodel.sminterface;

import biz.ekoplan.nmm2010.nmmproject.NMMProjectModelsChanged;
import biz.ekoplan.nmm2010.nmmproject.NMMProjectModelsListener;
import biz.ekoplan.nmm2010.surcemodel.*;
import biz.ekoplan.nmm2010.toolbox.NMMToolbox;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import nmm2010.NMMProject;
import nmm2010.Setup;

/**
 *
 * @author jarek
 */
public class NMMSingleEventsModelInterface extends javax.swing.JDialog 
    implements NMMProjectModelsListener, NMMAbstractNoiseSourceModelInterface,
    NMMNoiseSourceModelChangedListener{     
    
    final boolean DEBUG=true;
    private NMMSingleEventsMethodModel methodModel=null;
    private Setup setup;
    private NMMProject nmmProject;
    
    
    /**
     * Creates new form NMMSingleEventsModelInterface
     */
    public NMMSingleEventsModelInterface(java.awt.Frame parent, boolean modal,
            NMMSingleEventsMethodModel _semm, Setup _stp, NMMProject _nmmProj) {
        super(parent, modal);
        this.methodModel=_semm;
        this.setup=_stp;
        this.nmmProject=_nmmProj;
                
        //tworzenie modelu 2 tabeli dla tabel w interfejsie metody obliczeniowej
        NMMEventsFrequencyTableModel eftm = new NMMEventsFrequencyTableModel(_semm.getNMMProject());        
        eftm.setModelDataSource(this.methodModel.getModelDataSource());                
        eftm.addInputDataListener(_semm);        
        _semm.setModelDataSource(eftm.getModelDataSource());
        NMMEventsTableModel etm = new NMMEventsTableModel(_semm.getNMMProject(), eftm, this.methodModel);
                
        initComponents();
        
        //aktualiujemy nazwę modelu na interfejsie w oparciu o nazwę w modelu
        System.out.println("Kolejne srawdzenie nazwy modelu: "+_semm.getModelName());
        this.textModelName.setText(_semm.getModelName());
        //przypisujemy model pierwszej tabeli
        this.tabelEventsFrequency.setModel(eftm);
        
        ListSelectionModel lsm = this.tabelEventsFrequency.getSelectionModel();
        lsm.addListSelectionListener(eftm);
        lsm.addListSelectionListener(etm);        
        
        //przypisujemy model drugiej tabeli
        this.tableEvents.setModel(etm);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textModelName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelEventsFrequency = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableEvents = new javax.swing.JTable();
        check2m2Facade = new javax.swing.JCheckBox();
        buttonReport = new javax.swing.JButton();
        buttonOK = new javax.swing.JButton();
        labelResultLAeqD = new javax.swing.JLabel();
        labelResultLAeqN = new javax.swing.JLabel();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Single events model.");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Model");

        jLabel2.setText("Events frequency");

        tabelEventsFrequency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Event type", "Day", "Evening", "Night"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelEventsFrequency);

        jLabel3.setText("Events");

        tableEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Event type", "Time", "SEL", "On / Off"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEventsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableEvents);

        check2m2Facade.setText("d<2m from facade");
        check2m2Facade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check2m2FacadeActionPerformed(evt);
            }
        });

        buttonReport.setText("Report");
        buttonReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReportActionPerformed(evt);
            }
        });

        buttonOK.setText("OK");
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        labelResultLAeqD.setText("<html>L<sub>AeqD</sub> = --,- dB</html>");

        labelResultLAeqN.setText("<html>L<sub>AeqN</sub>=--,- dB</html>");
        labelResultLAeqN.setToolTipText("");

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textModelName))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonOK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonReport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(check2m2Facade)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelResultLAeqD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(labelResultLAeqN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textModelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonReport)
                            .addComponent(buttonOK)
                            .addComponent(buttonCancel))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(check2m2Facade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelResultLAeqD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelResultLAeqN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
              
       //po utworzeniu obiektu okna, dodajemy go jako słuchacza do modelu
       //obliczeniowego źródła hałasu
       this.methodModel.addNoiseSourceModelChangedListener(this);
    }//GEN-LAST:event_formWindowOpened

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        this.methodModel.setModelName(this.textModelName.getText());
        if (!this.nmmProject.contains(methodModel)) {        
            this.nmmProject.addNoiseSourceModel(this.methodModel);
        }
        this.dispose();
    }//GEN-LAST:event_buttonOKActionPerformed

    private void check2m2FacadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check2m2FacadeActionPerformed
        this.methodModel.setFacadeCorrection(this.check2m2Facade.isSelected());
    }//GEN-LAST:event_check2m2FacadeActionPerformed

    private void tableEventsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEventsMouseClicked
        //poniższa linijka jest tylko po to aby model się przeliczył, ponieważ
        //nie wiedziałem jak wymusić takie działania po wyłączeniu lub włączeniu
        //zdarzenia akustycznego w dolnej tabli        
        this.methodModel.setFacadeCorrection(this.check2m2Facade.isSelected());
    }//GEN-LAST:event_tableEventsMouseClicked

    private void buttonReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReportActionPerformed
                
        File file=null;
        
        JFileChooser fc = new JFileChooser(this.setup.getProperty("NMM_SETUP_PROJECT_PATH", null));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "HTML Documents", "html");
        fc.setFileFilter(filter);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();            
        }                    
        try {
            FileWriter fr = new FileWriter(file);
            try (BufferedWriter br = new BufferedWriter(fr)) {
                br.write(this.methodModel.getCalculationReport().toString());
                br.flush();
            }
            JOptionPane.showMessageDialog(null, "Writing report successfull !!!", "Error", JOptionPane.INFORMATION_MESSAGE);
         } catch(IOException ex) {
            JOptionPane.showMessageDialog(null, "Writing report unsuccessfull !!!", "Error", JOptionPane.WARNING_MESSAGE);
         }
    }//GEN-LAST:event_buttonReportActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOK;
    private javax.swing.JButton buttonReport;
    private javax.swing.JCheckBox check2m2Facade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelResultLAeqD;
    private javax.swing.JLabel labelResultLAeqN;
    private javax.swing.JTable tabelEventsFrequency;
    private javax.swing.JTable tableEvents;
    private javax.swing.JTextField textModelName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void dispatchNMMProjectModelsChanged(NMMProjectModelsChanged _mEvent) {
        System.out.println("Tu trzeba coś zrobić z interfejsem bo model sie zmienił!!!");        
    }

    @Override
    public void dispatchNMMNoiseSourceModelChanged(NMMNoiseSourceModel _mEvent) {        
        System.out.println("Aktualizuję wyniki modelu na interfejsie ...");
        this.labelResultLAeqD.setText("<html>L<sub>AeqD</sub>="+String.valueOf(NMMToolbox.formatDouble(this.methodModel.getLAeqD()))+"dB</html>");
        this.labelResultLAeqN.setText("<html>L<sub>AeqN</sub>="+String.valueOf(NMMToolbox.formatDouble(this.methodModel.getLAeqN()))+"dB</html>");        
    }

    @Override
    public boolean isComplete() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
