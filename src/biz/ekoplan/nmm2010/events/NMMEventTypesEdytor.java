/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NMMEventTypesEdytor.java
 *
 * Created on 2011-07-31, 14:55:14
 */

package biz.ekoplan.nmm2010.events;

import java.awt.Color;
import java.awt.Image;
import javax.swing.DefaultListModel;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import nmm2010.NMMEvent;
import nmm2010.NMMEventType;
import nmm2010.NMMProject;

/**
 *
 * @author Jarek
 */
public class NMMEventTypesEdytor extends javax.swing.JDialog {

    NMMProject nmmProj;
    DefaultListModel dlm=new DefaultListModel();

    /** Creates new form NMMEventTypesEdytor */
    public NMMEventTypesEdytor(java.awt.Frame parent, boolean modal, NMMProject _nmmProject, Image iconImage) {
        super(parent, modal);
        this.setIconImage(iconImage);
        nmmProj=_nmmProject;
        
        initComponents();

        //wypełnienie listy rodzajami dostępnych typów zdarzeń
        this.listEventTypes.removeAll();
        int numberOfEventTypes=this.nmmProj.getEventTypes().length;
        for (int i=0; i<numberOfEventTypes;i++) {
            dlm.addElement(nmmProj.getEventTypes()[i]);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listEventTypes = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        buttonDelete = new javax.swing.JButton();
        buttonClose = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        buttonETColorChooser = new javax.swing.JButton();
        textETDescription = new javax.swing.JTextField();
        buttonUpdateAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Event types edytor");
        setIconImage(null);

        listEventTypes.setModel(this.dlm);
        listEventTypes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listEventTypes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEventTypesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listEventTypes);

        jLabel1.setText("Event types");

        buttonDelete.setText("Delete");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonClose.setText("Close");
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        buttonUpdate.setText("Update");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        jLabel2.setText("Description:");

        buttonETColorChooser.setText("Color");
        buttonETColorChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonETColorChooserActionPerformed(evt);
            }
        });

        buttonUpdateAll.setText("Update all");
        buttonUpdateAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(buttonETColorChooser)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textETDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonUpdateAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonUpdateAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                        .addComponent(buttonClose))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textETDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonETColorChooser)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonETColorChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonETColorChooserActionPerformed
        this.buttonETColorChooser.setBackground(JColorChooser.showDialog(null, "Choose color for an event", Color.yellow));
    }//GEN-LAST:event_buttonETColorChooserActionPerformed

    private void listEventTypesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEventTypesValueChanged
        //System.out.println("Dokonano nowego wyboru z listy typów zdarzeń");
        NMMEventType et = (NMMEventType) this.nmmProj.getEventTypes()[this.listEventTypes.getSelectedIndex()];
        this.buttonETColorChooser.setBackground(et.getColor());
        this.textETDescription.setText(et.getDescription());
    }//GEN-LAST:event_listEventTypesValueChanged

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        this.updateEventType();
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void updateEventType() {
        
        if (this.listEventTypes.getSelectedIndex()!=-1) {
            NMMEventType et = (NMMEventType) this.nmmProj.getEventTypes()[this.listEventTypes.getSelectedIndex()];
            et.setColor(this.buttonETColorChooser.getBackground());
            et.setDescription(this.textETDescription.getText()); 
        } else {
            JOptionPane.showMessageDialog(this, "Select event type before update!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        
    if (this.listEventTypes.getSelectedIndex()!=-1) {        
        this.nmmProj.deleteEventType((NMMEventType)this.listEventTypes.getSelectedValue());
        this.dispose();
        } else {
        JOptionPane.showMessageDialog(this, "Select event type before update!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonUpdateAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateAllActionPerformed
        
        if (this.listEventTypes.getSelectedIndex()!=-1) {
            //Aktualizacja opisów i kolorów zdarzeń w projekcie
            NMMEvent[] nmmEv;
            NMMEventType et = (NMMEventType) this.nmmProj.getEventTypes()[this.listEventTypes.getSelectedIndex()];
            nmmEv=this.nmmProj.getEvents(et);
            for (NMMEvent nmmEv1 : nmmEv) {
                nmmEv1.setDescription(this.textETDescription.getText());
                nmmEv1.setColor(this.buttonETColorChooser.getBackground());
            }               
            //Aktualizacja opisu i koloru typu zdarzenia
            this.updateEventType();
        } else {
            JOptionPane.showMessageDialog(this, "Select event type before update!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_buttonUpdateAllActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClose;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonETColorChooser;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JButton buttonUpdateAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listEventTypes;
    private javax.swing.JTextField textETDescription;
    // End of variables declaration//GEN-END:variables

}
