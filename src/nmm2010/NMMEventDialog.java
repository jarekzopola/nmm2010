/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NMMEventDialog.java
 *
 * Created on 2010-11-21, 23:31:41
 */

package nmm2010;

import biz.ekoplan.nmm2010.toolbox.TimeConverter;
import java.awt.Color;
import java.text.DateFormat;
import java.util.Locale;
import javax.swing.JColorChooser;

/**
 *
 * @author samsung
 */
public class NMMEventDialog extends javax.swing.JDialog {

    NMMProject nmmProj;
    Locale locale;
    Setup setup;

    /** Creates new form NMMEventDialog */
    public NMMEventDialog(java.awt.Frame parent, boolean modal, NMMProject _nmmProj, Locale _locale, Setup _stp) {
        super(parent, modal);
        locale=_locale;
        initComponents();
        nmmProj=_nmmProj;
        this.setup=_stp;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        colorChooser = new javax.swing.JColorChooser();
        buttonCreateEvent = new javax.swing.JButton();
        buttonCancelEvent = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboEventTypes = new javax.swing.JComboBox();
        buttonColor = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelTimeRange = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textEventDescription = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations",locale); // NOI18N
        setTitle(bundle.getString("NEW EVENT")); // NOI18N
        setIconImage(null);
        setIconImages(null);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        buttonCreateEvent.setText(bundle.getString("CREATE")); // NOI18N
        buttonCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateEventActionPerformed(evt);
            }
        });

        buttonCancelEvent.setText(bundle.getString("CANCEL")); // NOI18N
        buttonCancelEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelEventActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("EVENT:")); // NOI18N

        comboEventTypes.setEditable(true);
        comboEventTypes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEventTypesActionPerformed(evt);
            }
        });

        buttonColor.setText(bundle.getString("COLOR")); // NOI18N
        buttonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonColorActionPerformed(evt);
            }
        });

        jLabel2.setText(bundle.getString("COLOR:")); // NOI18N

        jLabel3.setText(bundle.getString("TIME RANGE:")); // NOI18N

        labelTimeRange.setText("-");

        jLabel5.setText(bundle.getString("DESCRIPTION:")); // NOI18N

        textEventDescription.setText("-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonCreateEvent)
                        .addGap(4, 4, 4)
                        .addComponent(buttonCancelEvent))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTimeRange, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                            .addComponent(comboEventTypes, 0, 430, Short.MAX_VALUE)
                            .addComponent(buttonColor)
                            .addComponent(textEventDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelTimeRange))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboEventTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textEventDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(buttonColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCreateEvent)
                    .addComponent(buttonCancelEvent))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonColorActionPerformed
        this.buttonColor.setBackground(JColorChooser.showDialog(null, java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations",locale).getString("CHOOSE COLOR FOR AN EVENT"), Color.yellow));
    }//GEN-LAST:event_buttonColorActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
    }//GEN-LAST:event_formWindowActivated

    private void buttonCancelEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelEventActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelEventActionPerformed

    private void buttonCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateEventActionPerformed

        //Najpierw dodajemy nowy rodzaj zdarzenia do katalogu zdarzeń
        //(jeżeli jeszcze taki rodzaj zdarzenia nie został dodany
        
        NMMEventType itm;
        
        if (this.comboEventTypes.getSelectedIndex()==-1) {
            itm= new NMMEventType("");
            itm.setType(this.comboEventTypes.getSelectedItem().toString());
            itm.setColor(this.buttonColor.getBackground());
            itm.setDescription(this.textEventDescription.getText());
            boolean ok = this.nmmProj.eventTypes.add(itm);
            if (ok) {
                System.out.println("Dodałem nowy rodzaj zdarzenia !");
                this.comboEventTypes.addItem(itm.getType());
                System.out.println(this.nmmProj.eventTypes);
            } else {
                //takie zdarzenie już jest więc go nie dodaję
                System.out.println("Taki typ zdarzenia już istnieje. Nie dodaję !");
            }   
        } else {
            itm=(NMMEventType)this.comboEventTypes.getSelectedItem();
        }                
        // teraz możemy dodać samo zdarzenie do zbioru zdarzeń projektu
        NMMEvent ev = new NMMEvent(this.textEventDescription.getText(),
                nmmProj.getCurrentSelection().getStart(),
                nmmProj.getCurrentSelection().getEnd(),
                itm,
                this.buttonColor.getBackground());
        nmmProj.addEvent(ev);
        nmmProj.setSaved(false);
        
        //likwidujemy selekcję na bazie której powstało zdarzenie
        if (Boolean.parseBoolean(this.setup.getProperty("NMM_SETUP_CLEAR_SELECTION_AFTER_EVENT", null))) {
            this.nmmProj.currentSelection.setEnd(this.nmmProj.currentSelection.getStart());   
        }        
        
        //zapamietujemy jaki rodzaj zdarzenia był ostatnio używany
        this.nmmProj.setLastUsedEventType(itm);
                
        // a teraz już likwidujemy dialog i wychodzimy stąd
        this.dispose();
    }//GEN-LAST:event_buttonCreateEventActionPerformed

    private void comboEventTypesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEventTypesActionPerformed
        
        //wykonywana po wybraniu z listy rozwijalnej typu zdarzenia
        //powoduje aktualizację w oknie dialogowym opisu typu zdarzenia i jego koloru
                
        if (this.comboEventTypes.getSelectedIndex()!=-1) {
            NMMEventType cet = (NMMEventType)this.comboEventTypes.getSelectedItem();                
            if (cet==null) {
                System.out.println("NIE MA TAKIEGO TYPU !!!");            
            } else {
                this.textEventDescription.setText(cet.getDescription());
                this.buttonColor.setBackground(cet.getColor());
            }   
        }        
    }//GEN-LAST:event_comboEventTypesActionPerformed

    private void initializeEventsCombo() {
        //System.out.println("Wchodzę do pętli dodawania nazw zdarzeń do pola wyboru...");
        this.comboEventTypes.removeAllItems();        
        for (NMMEventType item : nmmProj.eventTypes) {
            System.out.println(item.getClass().getName());
            this.comboEventTypes.addItem(item);
            //System.out.println("Dodaje kolejny ("+item.toString()+").");
        }
        //ustaw ostatnio uzywany typ zdarzenia jako wybrany
        this.comboEventTypes.setSelectedItem(this.nmmProj.getLastUsedEventType());
        this.textEventDescription.setText(this.nmmProj.getLastUsedEventType().getDescription());
                this.buttonColor.setBackground(this.nmmProj.getLastUsedEventType().getColor());
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        initializeEventsCombo();
        this.labelTimeRange.setText(TimeConverter.LongToTimeString(this.nmmProj.currentSelection.getStart(),
                DateFormat.MEDIUM, this.locale)+" - " +
                TimeConverter.LongToTimeString(this.nmmProj.currentSelection.getEnd(),
                DateFormat.MEDIUM, this.locale));
    }//GEN-LAST:event_formWindowOpened



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelEvent;
    private javax.swing.JButton buttonColor;
    private javax.swing.JButton buttonCreateEvent;
    private javax.swing.JColorChooser colorChooser;
    private javax.swing.JComboBox comboEventTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labelTimeRange;
    private javax.swing.JTextField textEventDescription;
    // End of variables declaration//GEN-END:variables

}
