/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NMMMeasurementInfo.java
 *
 * Created on 2010-11-21, 10:38:54
 */

package nmm2010;

import biz.ekoplan.nmm2010.devices.NMMNoiseMeasurementSet;
import biz.ekoplan.nmm2010.map.NMMOSMLocChooser;
import biz.ekoplan.nmm2010.measurement.NMMMeasurement;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import biz.ekoplan.nmm2010.toolbox.NMMNumberInputVerifier;
import biz.ekoplan.nmm2010.toolbox.TimeConverter;
import java.text.DateFormat;
import java.util.Locale;

/**
 *
 * @author samsung
 */
public class NMMMeasurementInfo extends javax.swing.JDialog {

    NMMProject nmmproject;
    NMMNumberInputVerifier niv;
    ImageIcon imgIcon;
    Locale locale;
    NMMMeasurement cm;
    Setup nmmSetup;
    File measurementAudio;

    /** Creates new form NMMMeasurementInfo */
    public NMMMeasurementInfo(java.awt.Frame parent, boolean modal, NMMProject _nmmproject, Locale _locale, 
            Setup _nmmsetup) {
        super(parent, modal);
        nmmproject=_nmmproject;
        this.cm=nmmproject.getCurrentMeasurement();
        locale=_locale;
        niv = new NMMNumberInputVerifier();
        initComponents();
        this.nmmSetup=_nmmsetup;
    }
    
    /** Creates new form NMMMeasurementInfo */
    public NMMMeasurementInfo(java.awt.Frame parent, boolean modal, NMMProject _nmmProject, NMMMeasurement nmmMeas, Locale _locale) {
        super(parent, modal);        
        locale=_locale;
        this.nmmproject=_nmmProject;
        this.cm=nmmMeas;
        niv = new NMMNumberInputVerifier();
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonOK = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textMeasurementDescription = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textCalibration1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textCalibration2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textCoordinateX = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textCoordinateY = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textHeight = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textareaRemarks = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        buttonBrowsePicture = new javax.swing.JButton();
        labelIcon = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        textUncertaintyB = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        textBackgroundNoise = new javax.swing.JTextField();
        textOperator = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        checkboxLabels = new javax.swing.JCheckBox();
        buttonCol = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        comboDeviceSet = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        textStartTime = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        textStartDate = new javax.swing.JTextField();
        buttonOpenMap = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMetrics = new javax.swing.JList();
        jLabel15 = new javax.swing.JLabel();
        labelMP3FilePath = new javax.swing.JLabel();
        buttonBrowseMP3 = new javax.swing.JButton();
        textAudioFile = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        textTimeResolution = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("biz/ekoplan/nmm2010/languages/translations",locale); // NOI18N
        setTitle(bundle.getString("MEASUREMENT INFORMATION")); // NOI18N
        setIconImage(null);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        buttonOK.setText(bundle.getString("OK")); // NOI18N
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("MEASUREMENT:")); // NOI18N

        jLabel2.setText(bundle.getString("CALIBRATION")); // NOI18N

        textCalibration1.setText("0");
        textCalibration1.setInputVerifier(this.niv);
        textCalibration1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                textCalibration1FocusLost(evt);
            }
        });

        jLabel3.setText("/");

        textCalibration2.setText("0");
        textCalibration2.setInputVerifier(this.niv);

        jLabel4.setText(bundle.getString("COORDINATES:  X=")); // NOI18N

        textCoordinateX.setText("0.000000");

        jLabel5.setText("  Y=");

        textCoordinateY.setText("0.000000");

        jLabel6.setText("h=");

        textHeight.setText("4");
        textHeight.setInputVerifier(this.niv);

        jLabel7.setText("m");

        jLabel8.setText(bundle.getString("LOCATION DESC.")); // NOI18N

        textareaRemarks.setColumns(20);
        textareaRemarks.setRows(5);
        jScrollPane1.setViewportView(textareaRemarks);

        jLabel9.setText(bundle.getString("PICTURE:")); // NOI18N

        buttonBrowsePicture.setText(bundle.getString("BROWSE")); // NOI18N
        buttonBrowsePicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowsePictureActionPerformed(evt);
            }
        });

        labelIcon.setBorder(new javax.swing.border.MatteBorder(null));
        labelIcon.setMaximumSize(new java.awt.Dimension(100, 150));
        labelIcon.setMinimumSize(new java.awt.Dimension(100, 150));
        labelIcon.setPreferredSize(new java.awt.Dimension(100, 150));
        labelIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                labelIconMousePressed(evt);
            }
        });

        jLabel10.setText("<html>\n<p>Uncertainty U<sub>B</sub> =</p>\n</html>");

        textUncertaintyB.setText("0.86");
        textUncertaintyB.setInputVerifier(this.niv);

        jLabel11.setText("<html>\n<p>L<sub>background</sub>=</p>\n</html>");

        textBackgroundNoise.setText("20");
        textBackgroundNoise.setInputVerifier(this.niv);

        jLabel13.setText(bundle.getString("OPERATOR:")); // NOI18N

        checkboxLabels.setText(bundle.getString("LABELS")); // NOI18N

        buttonCol.setText(bundle.getString("COLOR")); // NOI18N
        buttonCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonColActionPerformed(evt);
            }
        });

        jLabel12.setText(bundle.getString("DEVICE SET:")); // NOI18N

        comboDeviceSet.setModel(this.nmmproject.getMeasuringSets());

        jButton1.setText(bundle.getString("CANCEL")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textStartTime.setText(bundle.getString("HH:MM:SS")); // NOI18N

        jLabel14.setText(bundle.getString("START AT:")); // NOI18N

        textStartDate.setText(bundle.getString("YYYY-MM-DD")); // NOI18N

        buttonOpenMap.setText("...");
        buttonOpenMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpenMapActionPerformed(evt);
            }
        });

        listMetrics.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listMetrics);

        jLabel15.setText("Metrics");

        labelMP3FilePath.setText("Audio:");

        buttonBrowseMP3.setText("Browse");
        buttonBrowseMP3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseMP3ActionPerformed(evt);
            }
        });

        textAudioFile.setText("-");

        jLabel16.setText("Time resolution [ms] =");

        textTimeResolution.setText("-");
        textTimeResolution.setInputVerifier(niv);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonOK, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(52, 52, 52)
                        .addComponent(textOperator))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(labelMP3FilePath))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textAudioFile)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBrowseMP3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textMeasurementDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonCol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textStartDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comboDeviceSet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textCoordinateX, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textCoordinateY, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonOpenMap, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkboxLabels))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonBrowsePicture))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textCalibration1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textCalibration2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textTimeResolution, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textUncertaintyB, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textBackgroundNoise, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textMeasurementDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textCalibration1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(textCalibration2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textUncertaintyB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textBackgroundNoise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(textTimeResolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textCoordinateX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(textCoordinateY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(textHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(checkboxLabels)
                    .addComponent(buttonOpenMap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboDeviceSet)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(textStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(textOperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(labelIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBrowsePicture))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMP3FilePath)
                    .addComponent(buttonBrowseMP3)
                    .addComponent(textAudioFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOK)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        
    }//GEN-LAST:event_formWindowActivated

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed

        NMMMeasurement cm;
        
        cm=this.nmmproject.getCurrentMeasurement();
        cm.setRemarks(this.textareaRemarks.getText());
        cm.setDescription(this.textMeasurementDescription.getText());
        cm.setCoordinateX(Double.valueOf(this.textCoordinateX.getText()));
        cm.setCoordinateY(Double.valueOf(this.textCoordinateY.getText()));
        cm.setHeight(Double.valueOf(this.textHeight.getText()));
        cm.setFInalCalibration(Double.valueOf(this.textCalibration2.getText()));
        cm.setInitialCalibration(Double.valueOf(this.textCalibration1.getText()));
        cm.setUncertaintyB(Double.valueOf(this.textUncertaintyB.getText()));
        cm.setBackgroundNoiseLevel(Double.valueOf(this.textBackgroundNoise.getText()));
        cm.setMeasurementColor(this.buttonCol.getBackground());
        cm.setOperator(this.textOperator.getText());
        cm.setDrawLabels(this.checkboxLabels.isSelected());
        cm.setMeasurementBeginTime(TimeConverter.StringToLong(this.textStartDate.getText(),
                this.textStartTime.getText(),this.locale));
        if (this.comboDeviceSet.getSelectedIndex()>-1) {
            cm.setMeasurementSet((NMMNoiseMeasurementSet)this.comboDeviceSet.getSelectedItem());
        } else {
            cm.setMeasurementSet(null);
        }   
        cm.setMeasurementAudio(this.measurementAudio);
        cm.setMeasurementTimeResolution(Integer.valueOf(this.textTimeResolution.getText()));
        this.nmmproject.setSaved(false);
        this.dispose();        
    }//GEN-LAST:event_buttonOKActionPerformed

    private void buttonBrowsePictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowsePictureActionPerformed

        JFileChooser fc = new JFileChooser();
        //fc.setCurrentDirectory(new File(this.nmmSetup.getProjectPath()));
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                imgIcon = new ImageIcon(file.toString());
                this.nmmproject.getCurrentMeasurement().setPicture(imgIcon);
                Image ni = imgIcon.getImage().getScaledInstance(200, 150, 1);
                ImageIcon smallImgIcon = new ImageIcon(ni);
                this.labelIcon.setIcon(smallImgIcon);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_buttonBrowsePictureActionPerformed

    private void buttonColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonColActionPerformed
        this.buttonCol.setBackground(JColorChooser.showDialog(null, "Choose color for an event", Color.yellow));
    }//GEN-LAST:event_buttonColActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //get refference to current measurement - it will be used quite often
        //throughout the method
        NMMMeasurement cm = this.nmmproject.getCurrentMeasurement();
        try {
            this.checkboxLabels.setSelected(cm.getDrawLabels());
            this.textOperator.setText(cm.getOperator());
            this.buttonCol.setBackground(cm.getMeasurementColor());
            this.textCalibration1.setText(String.valueOf(cm.getInitialCalibration()));
            this.textCalibration2.setText(String.valueOf(cm.getFinalCalibration()));
            this.textCoordinateX.setText(String.valueOf(cm.getCoordinateX()));
            this.textCoordinateY.setText(String.valueOf(cm.getCoordinateY()));
            this.textHeight.setText(String.valueOf(cm.getHeight()));
            this.textMeasurementDescription.setText(cm.getDescription());
            this.textareaRemarks.setText(cm.getRemarks());
            this.textUncertaintyB.setText(String.valueOf(cm.getUncertaintyB()));
            this.textBackgroundNoise.setText(String.valueOf(cm.getBackgroundNoiseLevel()));
            this.textStartTime.setText(TimeConverter.LongToTimeString(cm.getMeasurementBeginTime(),DateFormat.MEDIUM, this.locale));
            this.textStartDate.setText(TimeConverter.LongToDateString(cm.getMeasurementBeginTime(),DateFormat.MEDIUM, this.locale));
            System.out.println("Liczba zmiennych w pomiarze: "+cm.getRecord(0).getMetrics().toArray().length);         
            System.out.println("Ustawiam rozdzielczość czasową pomiaru ...");
            this.textTimeResolution.setText(String.valueOf(cm.getMeasurementTimeResolution()));
            System.out.println("Ustawiam miniaturke obrazu ...");
            Image img = cm.getPicture().getImage().getScaledInstance(200, 150, 1);
            ImageIcon imgIco= new ImageIcon(img);
            imgIco.setImage(img);
            this.labelIcon.setIcon(imgIco);  
            this.listMetrics.setListData(cm.getRecord(0).getMetrics().toArray());
            this.comboDeviceSet.setSelectedItem(cm.getMeasurementSet());            
            this.textAudioFile.setText(cm.getMeasurementAudio().getName());
            this.measurementAudio=cm.getMeasurementAudio();
            System.out.println("Ustawiam ścieżkę pliku audio pomiaru ...");
            this.textAudioFile.setText(cm.getMeasurementAudio().getAbsolutePath());   
        } catch (Exception e) {
            System.out.println("Problem przy wypełnianiu formularza?: "+e.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textCalibration1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textCalibration1FocusLost
        
    }//GEN-LAST:event_textCalibration1FocusLost

    private void labelIconMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelIconMousePressed
        System.out.println("Kliknięto etykietę fotki w punkcie: "+evt.getX()+" - "+evt.getY());
    }//GEN-LAST:event_labelIconMousePressed

    private void buttonOpenMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpenMapActionPerformed
        NMMOSMLocChooser lc = new NMMOSMLocChooser(null, true);
        lc.pack();
        lc.setVisible(true);
        this.textCoordinateX.setText(String.valueOf(lc.getLon()));
        this.textCoordinateY.setText(String.valueOf(lc.getLat()));
        
    }//GEN-LAST:event_buttonOpenMapActionPerformed

    private void buttonBrowseMP3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseMP3ActionPerformed
        
        JFileChooser fc = new JFileChooser();
        //System.out.println(this.nmmSetup.getProperty("NMM_SETUP_PROJECT_PATH", "c:\\"));
        //fc.setCurrentDirectory(new File(this.nmmSetup.getProperty("NMM_SETUP_PROJECT_PATH", "c:\\")));
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                this.textAudioFile.setText("Audio file: "+fc.getSelectedFile().toString());
                this.measurementAudio=fc.getSelectedFile();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_buttonBrowseMP3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowseMP3;
    private javax.swing.JButton buttonBrowsePicture;
    private javax.swing.JButton buttonCol;
    private javax.swing.JButton buttonOK;
    private javax.swing.JButton buttonOpenMap;
    private javax.swing.JCheckBox checkboxLabels;
    private javax.swing.JComboBox comboDeviceSet;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelIcon;
    private javax.swing.JLabel labelMP3FilePath;
    private javax.swing.JList listMetrics;
    private javax.swing.JTextField textAudioFile;
    private javax.swing.JTextField textBackgroundNoise;
    private javax.swing.JTextField textCalibration1;
    private javax.swing.JTextField textCalibration2;
    private javax.swing.JTextField textCoordinateX;
    private javax.swing.JTextField textCoordinateY;
    private javax.swing.JTextField textHeight;
    private javax.swing.JTextField textMeasurementDescription;
    private javax.swing.JTextField textOperator;
    private javax.swing.JTextField textStartDate;
    private javax.swing.JTextField textStartTime;
    private javax.swing.JTextField textTimeResolution;
    private javax.swing.JTextField textUncertaintyB;
    private javax.swing.JTextArea textareaRemarks;
    // End of variables declaration//GEN-END:variables

}
